[{"F:\\tesis\\lora\\src\\index.js":"1","F:\\tesis\\lora\\src\\App.js":"2","F:\\tesis\\lora\\src\\reportWebVitals.js":"3","F:\\tesis\\lora\\src\\socket.js":"4","F:\\tesis\\lora\\src\\keycloak.js":"5","F:\\tesis\\lora\\src\\pages\\base\\Dashboard.js":"6","F:\\tesis\\lora\\src\\pages\\base\\Orders.js":"7","F:\\tesis\\lora\\src\\pages\\base\\Deposits.js":"8","F:\\tesis\\lora\\src\\pages\\base\\listItems.js":"9","F:\\tesis\\lora\\src\\pages\\base\\Chart.js":"10","F:\\tesis\\lora\\src\\pages\\global.js":"11","F:\\tesis\\lora\\src\\pages\\sensors\\sensors.js":"12","F:\\tesis\\lora\\src\\pages\\base\\Title.js":"13","F:\\tesis\\lora\\src\\pages\\sensors\\sensorCreate.js":"14","F:\\tesis\\lora\\src\\pages\\sensors\\sensorMaps.js":"15","F:\\tesis\\lora\\src\\pages\\reports\\graphics.js":"16"},{"size":538,"mtime":1651859487336,"results":"17","hashOfConfig":"18"},{"size":1528,"mtime":1656200903382,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1651626011044,"results":"20","hashOfConfig":"18"},{"size":276,"mtime":1654211044156,"results":"21","hashOfConfig":"18"},{"size":225,"mtime":1651746540775,"results":"22","hashOfConfig":"18"},{"size":7274,"mtime":1654247313920,"results":"23","hashOfConfig":"18"},{"size":1600,"mtime":1653455307461,"results":"24","hashOfConfig":"18"},{"size":667,"mtime":1651492015000,"results":"25","hashOfConfig":"18"},{"size":1101,"mtime":1653472580477,"results":"26","hashOfConfig":"18"},{"size":1836,"mtime":1653455309086,"results":"27","hashOfConfig":"18"},{"size":405,"mtime":1654214663317,"results":"28","hashOfConfig":"18"},{"size":16695,"mtime":1656204560281,"results":"29","hashOfConfig":"18"},{"size":352,"mtime":1651492015000,"results":"30","hashOfConfig":"18"},{"size":4169,"mtime":1654212449486,"results":"31","hashOfConfig":"18"},{"size":1360,"mtime":1653674027852,"results":"32","hashOfConfig":"18"},{"size":9950,"mtime":1656206867162,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"18vvlhm",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\tesis\\lora\\src\\index.js",[],["73","74"],"F:\\tesis\\lora\\src\\App.js",["75","76"],"F:\\tesis\\lora\\src\\reportWebVitals.js",[],"F:\\tesis\\lora\\src\\socket.js",[],"F:\\tesis\\lora\\src\\keycloak.js",[],"F:\\tesis\\lora\\src\\pages\\base\\Dashboard.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { SecondaryListItems } from './listItems';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport SensorsIcon from '@mui/icons-material/Sensors';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport PeopleIcon from '@mui/icons-material/People';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport { globalPages, globalTitles } from '../global';\nimport PageSensors from '../sensors/sensors';\nimport Graphics from '../reports/graphics'\nimport { height } from '@mui/system';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\nconst Offset = styled('div')(({ theme }) => theme.mixins.toolbar);\n\nclass DashboardContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      title: globalTitles.sensor,\n      page: globalPages.sensors,\n      sensor: null\n    }\n    this.pageSensors = this.pageSensors.bind(this);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.setPage = this.setPage.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.setSensors=this.setSensors.bind(this);\n  }\n\n  pageSensors(id){\n    this.setPage(globalPages.reportSensor);\n    this.setState({sensor: id});\n  }\n\n  toggleDrawer() {\n    this.setState({ open: !this.state.open });\n  }\n\n  setTitle(title){\n    this.setState({title: title});\n  }\n\n  setSensors(){\n    this.setTitle(globalTitles.sensor);\n    this.setPage(globalPages.sensors);\n  }\n\n  setPage(page) {\n    this.setState({ page: page });\n  }\n\n  renderPage(page) {\n    if (page == globalPages.sensors) {\n      return (<PageSensors\n        handleSensorPage={this.pageSensors} \n        open={this.state.open} />);\n    }\n    if(page == globalPages.reportSensor){\n      return (<Graphics setTitle={this.setTitle} id={this.state.sensor}/>);\n    }\n  }\n\n\n  render() {\n\n    return (\n      <ThemeProvider theme={mdTheme}>\n        <Box sx={{ display: 'flex' }}>\n          <CssBaseline />\n          <AppBar position=\"absolute\" open={this.state.open}>\n            <Toolbar\n              sx={{\n                pr: '24px', // keep right padding when drawer closed\n              }}\n            >\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={this.toggleDrawer}\n                sx={{\n                  marginRight: '36px',\n                  ...(this.state.open && { display: 'none' }),\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                sx={{ flexGrow: 1 }}\n              >\n                {this.state.title}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer variant=\"permanent\" open={this.state.open}>\n            <Toolbar\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n                px: [1],\n              }}\n            >\n              <IconButton onClick={this.toggleDrawer}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </Toolbar>\n            <Divider />\n            <List component=\"nav\">\n              <React.Fragment>\n                <ListItemButton onClick={this.setSensors}>\n                  <ListItemIcon>\n                    <SensorsIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Sensores\" />\n                </ListItemButton>\n              </React.Fragment>\n              <Divider sx={{ my: 1 }} />\n              <SecondaryListItems />\n            </List>\n          </Drawer>\n          \n          <Box\n            component=\"main\"\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === 'light'\n                  ? theme.palette.primary[100]\n                  : theme.palette.grey[900],\n              flexGrow: 1,\n              height: '100vh',\n              width: '100vw',\n              overflow: 'auto',\n            }}\n          >\n           <div style={{height: '64px'}}></div>\n            \n\n\n            {this.renderPage(this.state.page)}\n\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default DashboardContent;","F:\\tesis\\lora\\src\\pages\\base\\Orders.js",["95"],"import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n \n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nexport default function Orders() {\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{`$${row.amount}`}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Link color=\"primary\" href=\"#\" onClick={preventDefault} sx={{ mt: 3 }}>\n        See more orders\n      </Link>\n    </React.Fragment>\n  );\n}\n","F:\\tesis\\lora\\src\\pages\\base\\Deposits.js",[],"F:\\tesis\\lora\\src\\pages\\base\\listItems.js",["96","97","98","99","100","101"],"import * as React from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport PeopleIcon from '@mui/icons-material/People';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport { useKeycloak } from '@react-keycloak/web';\n\n\n\nexport function SecondaryListItems() {\n  const { keycloak, initialized } = useKeycloak();\n  return (\n  <React.Fragment>\n    <ListSubheader component=\"div\" inset>\n      Usuario\n    </ListSubheader>\n    <ListItemButton>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Cerrar SesiÃ³n\" onClick={()=> {\n        keycloak.logout();\n      }} />\n    </ListItemButton>\n    \n  </React.Fragment>\n  )\n}\n","F:\\tesis\\lora\\src\\pages\\base\\Chart.js",[],"F:\\tesis\\lora\\src\\pages\\global.js",[],"F:\\tesis\\lora\\src\\pages\\sensors\\sensors.js",["102","103","104","105"],"\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { styled } from '@mui/material/styles';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Paper from '@mui/material/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\nimport { Container } from '@mui/material';\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport Fab from '@mui/material/Fab';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PageSensorsCreate from './sensorCreate';\r\nimport { newSensor, urls } from '../global';\r\nimport PageSensorsMap from './sensorMaps';\r\nimport TableChartIcon from '@mui/icons-material/TableChart';\r\nimport { ConnectingAirportsOutlined } from '@mui/icons-material';\r\nconst classes = {\r\n    flexContainer: 'ReactVirtualizedDemo-flexContainer',\r\n    tableRow: 'ReactVirtualizedDemo-tableRow',\r\n    tableRowHover: 'ReactVirtualizedDemo-tableRowHover',\r\n    tableCell: 'ReactVirtualizedDemo-tableCell',\r\n    noClick: 'ReactVirtualizedDemo-noClick',\r\n};\r\n\r\nconst styles = ({ theme }) => ({\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n        ...(theme.direction === 'rtl' && {\r\n            paddingLeft: '0 !important',\r\n        }),\r\n        ...(theme.direction !== 'rtl' && {\r\n            paddingRight: undefined,\r\n        }),\r\n    },\r\n    [`& .${classes.flexContainer}`]: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        boxSizing: 'border-box',\r\n    },\r\n    [`& .${classes.tableRow}`]: {\r\n        cursor: 'pointer',\r\n    },\r\n    [`& .${classes.tableRowHover}`]: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.grey[200],\r\n        },\r\n    },\r\n    [`& .${classes.tableCell}`]: {\r\n        flex: 1,\r\n    },\r\n    [`& .${classes.noClick}`]: {\r\n        cursor: 'initial',\r\n    },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n    static defaultProps = {\r\n        headerHeight: 48,\r\n        rowHeight: 48,\r\n    };\r\n\r\n    getRowClassName = ({ index }) => {\r\n        const { onRowClick } = this.props;\r\n\r\n        return clsx(classes.tableRow, classes.flexContainer, {\r\n            [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n        });\r\n    };\r\n\r\n    cellRenderer = ({ cellData, columnIndex }) => {\r\n        const { columns, rowHeight, onRowClick } = this.props;\r\n        return (\r\n            <TableCell\r\n                component=\"div\"\r\n                className={clsx(classes.tableCell, classes.flexContainer, {\r\n                    [classes.noClick]: onRowClick == null,\r\n                })}\r\n                variant=\"body\"\r\n                style={{ height: rowHeight }}\r\n                align={\r\n                    (columnIndex != null && columns[columnIndex].numeric) || false\r\n                        ? 'right'\r\n                        : 'left'\r\n                }\r\n            >\r\n                {cellData}\r\n            </TableCell>\r\n        );\r\n    };\r\n\r\n    headerRenderer = ({ label, columnIndex }) => {\r\n        const { headerHeight, columns } = this.props;\r\n\r\n        return (\r\n            <TableCell\r\n                component=\"div\"\r\n                className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n                variant=\"head\"\r\n                style={{ height: headerHeight }}\r\n                align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n            >\r\n                <span>{label}</span>\r\n            </TableCell>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n        return (\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <Table stickyHeader\r\n                        height={height}\r\n                        width={width}\r\n                        rowHeight={rowHeight}\r\n                        gridStyle={{\r\n                            direction: 'inherit',\r\n                        }}\r\n                        headerHeight={headerHeight}\r\n                        {...tableProps}\r\n                        rowClassName={this.getRowClassName}\r\n                    >\r\n                        {columns.map(({ dataKey, ...other }, index) => {\r\n                            return (\r\n                                <Column\r\n                                    key={dataKey}\r\n                                    headerRenderer={(headerProps) =>\r\n                                        this.headerRenderer({\r\n                                            ...headerProps,\r\n                                            columnIndex: index,\r\n                                        })\r\n                                    }\r\n                                    className={classes.flexContainer}\r\n                                    cellRenderer={this.cellRenderer}\r\n                                    dataKey={dataKey}\r\n                                    {...other}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Table>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n    columns: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            dataKey: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            numeric: PropTypes.bool,\r\n            width: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    headerHeight: PropTypes.number,\r\n    onRowClick: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = styled(MuiVirtualizedTable)(styles);\r\n\r\n// ---\r\n\r\nconst action =\r\n    <React.Fragment>\r\n        <IconButton onClick={(e) => this.handleEdit()} aria-label=\"editar\">\r\n            <EditIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"eliminar\">\r\n            <DeleteIcon />\r\n        </IconButton>\r\n    </React.Fragment>;\r\n\r\nconst rows = [];\r\nrows.push({ id: 1, name: \"sensor1\", topic: \"Solar Panel\", actions: action });\r\n\r\n\r\nclass PageSensors extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tablavirtual = React.createRef();\r\n        this.state = {};\r\n        this.state.sensor = newSensor;\r\n        this.state.columna = 200;\r\n        this.state.dialogOpen = false;\r\n        this.state.listSensor = [];\r\n        this.state.listSensors = [];\r\n        this.state.mapopen = false;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDialogClose = this.handleDialogClose.bind(this);\r\n        this.handleDialogOpen = this.handleDialogOpen.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getAllSensor = this.getAllSensor.bind(this);\r\n        this.handleMapOpen = this.handleMapOpen.bind(this);\r\n        this.handleMapClose = this.handleMapClose.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resizeWindow);\r\n        console.log(\"unmount\");\r\n    }\r\n\r\n    handlePageSensors(id) {\r\n        this.props.handleSensorPage(id);\r\n    }\r\n\r\n    handleEdit(id) {\r\n        console.log(id);\r\n        fetch(\"/sensors/id?id=\" + id, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + window.token\r\n            },\r\n\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let auxsensor = data.docs;\r\n                auxsensor.meta = JSON.stringify(auxsensor.meta);\r\n\r\n                this.setState({ dialogOpen: true, sensor: auxsensor });\r\n                console.log(data);\r\n            }).catch((err) => {\r\n                this.setState({ sensor: newSensor });\r\n                console.log(err);\r\n\r\n            });\r\n    }\r\n    delete(id) {\r\n        let text = \"EstÃ¡ a punto de borrar el sensor\";\r\n        if (window.confirm(text) == true) {\r\n            console.log(id);\r\n            let body = { id: id }\r\n            fetch(\"/sensors\", {\r\n                method: 'DELETE',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + window.token\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                }).catch((err) => {\r\n\r\n                    console.log(err);\r\n\r\n                });\r\n            this.getAllSensor();\r\n        }\r\n\r\n    }\r\n\r\n    getAllSensor() {\r\n        console.log(window.token);\r\n        fetch(\"/sensors\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + window.token\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let aux = [];\r\n                let auxlist = [];\r\n                data.docs.forEach(ele => {\r\n                    aux.push({\r\n                        id: ele.id, name: ele.name, topic: ele.topic, actions: <React.Fragment>\r\n                            <IconButton onClick={(e) => this.handleEdit(ele._id)} aria-label=\"editar\">\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                            <IconButton onClick={(e) => this.handlePageSensors(ele._id)} aria-label=\"Data\">\r\n                                <TableChartIcon />\r\n                            </IconButton>\r\n                            <IconButton onClick={(e) => this.delete(ele._id)} aria-label=\"eliminar\">\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    });\r\n                    if (ele.latitud_value != null && ele.latitud_value != null) {\r\n                        auxlist.push(ele);\r\n                    }\r\n\r\n                });\r\n                this.setState({ listSensor: aux, listSensors: auxlist });\r\n            }).catch((err) => {\r\n                this.setState({ listSensor: [] });\r\n                console.log(err);\r\n\r\n            });\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        let copy = JSON.parse(JSON.stringify(this.state.sensor));\r\n        copy[e.target.id] = e.target.value;\r\n        this.setState({ sensor: copy });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let copy = JSON.parse(JSON.stringify(this.state.sensor));\r\n        if (this.state.sensor._id != null) {\r\n            let auxid = copy._id;\r\n            delete copy._id;\r\n            copy.meta = JSON.parse(copy.meta);\r\n            let bod = { model: copy, id: auxid };\r\n            fetch(\"/sensors\", {\r\n                method: 'PUT',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + window.token\r\n                },\r\n                body: JSON.stringify(bod)\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ dialogOpen: false, sensor: newSensor });\r\n                    console.log(data);\r\n                    this.getAllSensor();\r\n                }).catch((err) => {\r\n                    this.setState({ sensor: newSensor });\r\n                    console.log(err);\r\n\r\n                });\r\n        } else {\r\n            delete copy._id;\r\n            copy.meta = JSON.parse(copy.meta);\r\n            let bod = { model: copy };\r\n            fetch(\"/sensors\", {\r\n                method: 'POST',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + window.token\r\n                },\r\n                body: JSON.stringify(bod)\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ dialogOpen: false, sensor: newSensor });\r\n                    console.log(data);\r\n                    this.getAllSensor();\r\n                }).catch((err) => {\r\n                    this.setState({ sensor: newSensor });\r\n                    console.log(err);\r\n\r\n                });\r\n        }\r\n        this.getAllSensor();\r\n    }\r\n\r\n    handleDialogOpen() {\r\n        this.setState({ dialogOpen: true });\r\n    }\r\n    handleDialogClose() {\r\n        this.setState({ dialogOpen: false, sensor: newSensor });\r\n    }\r\n\r\n    handleMapOpen() {\r\n        this.setState({ mapopen: !this.state.mapopen });\r\n    }\r\n    handleMapClose() {\r\n        this.setState({ mapopen: false });\r\n        this.setState({ columna: this.tablavirtual.current.offsetWidth / 4 });\r\n\r\n    }\r\n\r\n\r\n    resizeWindow = () => {\r\n        console.log('Resize me');\r\n        console.log(this.tablavirtual.current);\r\n        if (!this.state.mapopen) {\r\n            this.setState({ columna: this.tablavirtual.current.offsetWidth / 4 });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resizeWindow);\r\n        console.log(this.tablavirtual.current.offsetWidth);\r\n        this.setState({ columna: this.tablavirtual.current.offsetWidth / 4 });\r\n        this.getAllSensor();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ width: '100%', height: 'calc(100% - 64px)' }}>\r\n                <Tooltip title=\"AÃ±adir Sensor\">\r\n                    <Fab onClick={this.handleDialogOpen} variant=\"extended\" style={{ margin: '15px', backgroundColor: 'white' }} sx={{ boxShadow: 2 }}>\r\n                        <AddIcon sx={{ mr: 1 }} />\r\n                        AÃ±adir\r\n                    </Fab>\r\n                </Tooltip>\r\n                <Tooltip title=\"Mapa\">\r\n                    <Fab onClick={this.handleMapOpen} variant=\"extended\" style={{ margin: '15px', backgroundColor: 'white' }} sx={{ boxShadow: 2 }}>\r\n                        <MapIcon sx={{ mr: 1 }} />\r\n                        Mapa\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n                {this.state.mapopen ? <PageSensorsMap list={this.state.listSensors} /> :\r\n                    <Paper style={{ height: 'calc(100% - 78px)', width: '100%' }} ref={this.tablavirtual}>\r\n                        <VirtualizedTable\r\n\r\n                            rowCount={this.state.listSensor.length}\r\n                            rowGetter={({ index }) => this.state.listSensor[index]}\r\n                            columns={[\r\n                                {\r\n                                    width: this.state.columna,\r\n                                    label: 'id',\r\n                                    dataKey: 'id',\r\n\r\n                                    numeric: false,\r\n                                },\r\n                                {\r\n                                    width: this.state.columna,\r\n                                    label: 'Nombre',\r\n                                    dataKey: 'name',\r\n                                    numeric: false,\r\n                                },\r\n                                {\r\n                                    width: this.state.columna,\r\n                                    label: 'TÃ³pico',\r\n                                    dataKey: 'topic',\r\n                                    numeric: false,\r\n                                },\r\n                                {\r\n                                    width: this.state.columna,\r\n                                    label: 'Acciones',\r\n                                    dataKey: 'actions',\r\n                                    numeric: false,\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </Paper>}\r\n                <PageSensorsCreate\r\n                    sensor={this.state.sensor}\r\n                    handleChange={this.handleChange}\r\n                    open={this.state.dialogOpen}\r\n                    handleClose={this.handleDialogClose}\r\n                    handleSubmit={this.handleSubmit}\r\n                />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageSensors;","F:\\tesis\\lora\\src\\pages\\base\\Title.js",[],"F:\\tesis\\lora\\src\\pages\\sensors\\sensorCreate.js",["106","107"],"import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nclass PageSensorsCreate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.props.handleClose}>\r\n                <DialogTitle>{this.props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Nombre Sensor\"\r\n                        fullWidth\r\n                        required\r\n                        variant=\"standard\"\r\n                        onChange={this.props.handleChange}\r\n                        value={this.props.sensor.name}\r\n                    />\r\n                    <TextField \r\n                        margin=\"dense\"\r\n                        id=\"id\"\r\n                        label=\"Id del Sensor\"\r\n                        fullWidth\r\n                        required\r\n                        variant=\"standard\"\r\n                        onChange={this.props.handleChange}\r\n                        value={this.props.sensor.id}\r\n                    />\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        id=\"meta\"\r\n                        label=\"Meta Data\"\r\n                        multiline\r\n                        rows={8}\r\n                        onChange={this.props.handleChange}\r\n                        value={this.props.sensor.meta}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"topic\"\r\n                        label=\"TÃ³pico\"\r\n                        fullWidth\r\n                        required\r\n                        variant=\"standard\"\r\n                        onChange={this.props.handleChange}\r\n                        value={this.props.sensor.topic}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"category\"\r\n                        label=\"CategorÃ­a\"\r\n                        fullWidth\r\n                        required\r\n                        variant=\"standard\"\r\n                        value={this.props.sensor.category}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"latitud_value\"\r\n                        label=\"Latitud\"\r\n                        \r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={this.props.sensor.latitud_value}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"longitud_value\"\r\n                        label=\"Longitud\"\r\n                        \r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={this.props.sensor.longitud_value}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.handleClose}>Cancelar</Button>\r\n                    <Button onClick={this.props.handleSubmit}>Subscribirse</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageSensorsCreate;","F:\\tesis\\lora\\src\\pages\\sensors\\sensorMaps.js",["108","109"],"import React from 'react';\r\nimport { MapContainer, TileLayer, useMap, Marker,Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\nconst position = [13.680218380437124, -89.23616217214374];\r\n\r\n\r\nclass PageSensorsMap extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <MapContainer style={{ height: 'calc(100% - 78px)', width: '100%' }}\r\n             center={position} zoom={25} scrollWheelZoom={false}>\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {this.props.list.map(sn => (\r\n                 <Marker key={sn.id} position={[sn.latitud_value,sn.longitud_value]}>\r\n                 <Popup>\r\n                   {sn.name}<br />\r\n                 </Popup>\r\n               </Marker>\r\n            ))}\r\n           \r\n          </MapContainer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageSensorsMap;","F:\\tesis\\lora\\src\\pages\\reports\\graphics.js",["110","111","112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":21},{"ruleId":"122","severity":1,"message":"126","line":10,"column":3,"nodeType":"124","messageId":"125","endLine":10,"endColumn":11},{"ruleId":"122","severity":1,"message":"127","line":12,"column":8,"nodeType":"124","messageId":"125","endLine":12,"endColumn":13},{"ruleId":"122","severity":1,"message":"128","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":17},{"ruleId":"122","severity":1,"message":"129","line":14,"column":8,"nodeType":"124","messageId":"125","endLine":14,"endColumn":12},{"ruleId":"122","severity":1,"message":"130","line":15,"column":8,"nodeType":"124","messageId":"125","endLine":15,"endColumn":13},{"ruleId":"122","severity":1,"message":"131","line":19,"column":8,"nodeType":"124","messageId":"125","endLine":19,"endColumn":25},{"ruleId":"122","severity":1,"message":"132","line":21,"column":8,"nodeType":"124","messageId":"125","endLine":21,"endColumn":13},{"ruleId":"122","severity":1,"message":"133","line":22,"column":8,"nodeType":"124","messageId":"125","endLine":22,"endColumn":16},{"ruleId":"122","severity":1,"message":"134","line":23,"column":8,"nodeType":"124","messageId":"125","endLine":23,"endColumn":14},{"ruleId":"122","severity":1,"message":"135","line":27,"column":8,"nodeType":"124","messageId":"125","endLine":27,"endColumn":21},{"ruleId":"122","severity":1,"message":"136","line":29,"column":8,"nodeType":"124","messageId":"125","endLine":29,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":30,"column":8,"nodeType":"124","messageId":"125","endLine":30,"endColumn":18},{"ruleId":"122","severity":1,"message":"138","line":31,"column":8,"nodeType":"124","messageId":"125","endLine":31,"endColumn":20},{"ruleId":"122","severity":1,"message":"139","line":32,"column":8,"nodeType":"124","messageId":"125","endLine":32,"endColumn":18},{"ruleId":"122","severity":1,"message":"140","line":36,"column":10,"nodeType":"124","messageId":"125","endLine":36,"endColumn":16},{"ruleId":"122","severity":1,"message":"141","line":38,"column":10,"nodeType":"124","messageId":"125","endLine":38,"endColumn":19},{"ruleId":"122","severity":1,"message":"142","line":98,"column":7,"nodeType":"124","messageId":"125","endLine":98,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":140,"column":14,"nodeType":"145","messageId":"146","endLine":140,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":145,"column":13,"nodeType":"145","messageId":"146","endLine":145,"endColumn":15},{"ruleId":"122","severity":1,"message":"147","line":11,"column":10,"nodeType":"124","messageId":"125","endLine":11,"endColumn":20},{"ruleId":"122","severity":1,"message":"135","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":21},{"ruleId":"122","severity":1,"message":"136","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":18},{"ruleId":"122","severity":1,"message":"138","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":20},{"ruleId":"122","severity":1,"message":"139","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":18},{"ruleId":"122","severity":1,"message":"148","line":17,"column":21,"nodeType":"124","messageId":"125","endLine":17,"endColumn":32},{"ruleId":"122","severity":1,"message":"128","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":19},{"ruleId":"122","severity":1,"message":"149","line":18,"column":21,"nodeType":"124","messageId":"125","endLine":18,"endColumn":25},{"ruleId":"122","severity":1,"message":"150","line":21,"column":10,"nodeType":"124","messageId":"125","endLine":21,"endColumn":36},{"ruleId":"143","severity":1,"message":"144","line":242,"column":34,"nodeType":"145","messageId":"146","endLine":242,"endColumn":36},{"ruleId":"122","severity":1,"message":"151","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":11,"column":5,"nodeType":"154","messageId":"155","endLine":13,"endColumn":6},{"ruleId":"122","severity":1,"message":"156","line":2,"column":35,"nodeType":"124","messageId":"125","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"153","line":18,"column":5,"nodeType":"154","messageId":"155","endLine":20,"endColumn":6},{"ruleId":"122","severity":1,"message":"157","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":19},{"ruleId":"122","severity":1,"message":"158","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":19},{"ruleId":"122","severity":1,"message":"159","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":14},{"ruleId":"122","severity":1,"message":"128","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":17},{"ruleId":"122","severity":1,"message":"160","line":15,"column":10,"nodeType":"124","messageId":"125","endLine":15,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":105,"column":90,"nodeType":"145","messageId":"146","endLine":105,"endColumn":92},{"ruleId":"143","severity":1,"message":"144","line":137,"column":36,"nodeType":"145","messageId":"146","endLine":137,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":140,"column":36,"nodeType":"145","messageId":"146","endLine":140,"endColumn":38},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useKeycloak' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'NotificationsIcon' is defined but never used.","'Chart' is defined but never used.","'Deposits' is defined but never used.","'Orders' is defined but never used.","'DashboardIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'height' is defined but never used.","'Copyright' is defined but never used.","'Offset' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createData' is defined but never used.","'initialized' is assigned a value but never used.","'urls' is defined but never used.","'ConnectingAirportsOutlined' is defined but never used.","'DialogContentText' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useMap' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'display' is defined but never used.","no-global-assign","no-unsafe-negation"]